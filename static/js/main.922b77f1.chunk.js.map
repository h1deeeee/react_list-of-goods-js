{"version":3,"sources":["components/GoodCard/GoodCard.jsx","components/GoodList/GoodList.jsx","App.jsx","index.jsx"],"names":["GoodCard","good","GoodList","goods","map","id","SORT_FIELD_NAME","SORT_FIELD_LENGTH","goodsFromServer","App","useState","sortField","setSortField","isAscending","setIsAscending","sortedGoods","prepearedGoods","sort","good1","good2","length","localeCompare","getPreparedGoods","visibleGoods","reverse","className","type","onClick","cn","ReactDOM","render","document","getElementById"],"mappings":"iPACaA,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACtB,oBAAI,UAAQ,OAAZ,SAAoBA,KCATC,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACtB,6BAEEA,EAAMC,KAAI,SAAAH,GAAI,OACZ,cAAC,EAAD,CAAwBA,KAAMA,GAAfA,EAAKI,UCApBC,EAAkB,OAClBC,EAAoB,SAuBnB,IAAMC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGWC,EAAM,WACjB,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAsCF,oBAAS,GAA/C,mBAAOG,EAAP,KAAoBC,EAApB,KAWA,IAAMC,EA/CR,SAA0BZ,EAAOQ,GAC/B,IAAMK,EAAc,YAAOb,GAiB3B,OAfIQ,GACFK,EAAeC,MAAK,SAACC,EAAOC,GAC1B,OAAQR,GACN,KAAKJ,EACH,OAAOW,EAAME,OAASD,EAAMC,OAE9B,KAAKd,EACH,OAAOY,EAAMG,cAAcF,GAE7B,QACE,OAAO,MAKRH,EA6BaM,CAAiBd,EAAiBG,GAChDY,EAAeV,EAAcE,EAAcA,EAAYS,UAE7D,OACE,sBAAKC,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLC,QAAS,kBAAMf,EAAaN,IAC5BmB,UAAWG,IAAG,SAAU,UAAW,CACjC,WAAYjB,IAAcL,IAJ9B,iCAUA,wBACEoB,KAAK,SACLC,QAAS,kBAAMf,EAAaL,IAC5BkB,UAAWG,IAAG,SAAU,aAAc,CACpC,WAAYjB,IAAcJ,IAJ9B,4BAUA,wBACEmB,KAAK,SACLD,UAAWG,IAAG,SAAU,aAAc,CACpC,WAAYf,IAEdc,QAxCgB,WACtBb,GAAgBD,IAkCZ,sBAWiB,KAAdF,IAAqBE,IACpB,wBACEa,KAAK,SACLD,UAAU,4BACVE,QA9CZ,WACEf,EAAa,IACbE,GAAe,IAyCP,sBAWN,cAAC,EAAD,CAAUX,MAAOoB,QCtGvBM,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.922b77f1.chunk.js","sourcesContent":["\nexport const GoodCard = ({ good }) => (\n  <li data-cy=\"Good\">{good}</li>\n);\n","import { GoodCard } from '../GoodCard/GoodCard';\n\nexport const GoodList = ({ goods }) => (\n  <ul>\n    {\n    goods.map(good => (\n      <GoodCard key={good.id} good={good} />\n    ))\n    }\n  </ul>\n);\n","import { useState } from 'react';\nimport cn from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport { GoodList } from './components/GoodList/GoodList';\n\nconst SORT_FIELD_NAME = 'name';\nconst SORT_FIELD_LENGTH = 'length';\n\nfunction getPreparedGoods(goods, sortField) {\n  const prepearedGoods = [...goods];\n\n  if (sortField) {\n    prepearedGoods.sort((good1, good2) => {\n      switch (sortField) {\n        case SORT_FIELD_LENGTH:\n          return good1.length - good2.length;\n\n        case SORT_FIELD_NAME:\n          return good1.localeCompare(good2);\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  return prepearedGoods;\n}\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nexport const App = () => {\n  const [sortField, setSortField] = useState('');\n  const [isAscending, setIsAscending] = useState(true);\n\n  const toggleSortOrder = () => {\n    setIsAscending(!isAscending);\n  };\n\n  function reset() {\n    setSortField('');\n    setIsAscending(true);\n  }\n\n  const sortedGoods = getPreparedGoods(goodsFromServer, sortField);\n  const visibleGoods = isAscending ? sortedGoods : sortedGoods.reverse();\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          onClick={() => setSortField(SORT_FIELD_NAME)}\n          className={cn('button', 'is-info', {\n            'is-light': sortField !== SORT_FIELD_NAME,\n          })}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={() => setSortField(SORT_FIELD_LENGTH)}\n          className={cn('button', 'is-success', {\n            'is-light': sortField !== SORT_FIELD_LENGTH,\n          })}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button', 'is-warning', {\n            'is-light': isAscending,\n          })}\n          onClick={toggleSortOrder}\n        >\n          Reverse\n        </button>\n\n        {\n          (sortField !== '' || !isAscending) && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={reset}\n            >\n              Reset\n            </button>\n          )}\n\n      </div>\n\n      <GoodList goods={visibleGoods} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}